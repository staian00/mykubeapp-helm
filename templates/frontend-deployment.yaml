# A Kubernetes Deployment for the frontend application.
# It uses Helm template syntax to pull values from values.yaml.
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-frontend
  labels:
    app: {{ .Release.Name }}-frontend
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: {{ .Release.Name }}-frontend
  template:
    metadata:
      labels:
        app: {{ .Release.Name }}-frontend
    spec:
      containers:
      - name: frontend-nginx
        # The image repository, tag, and pull policy are configured in values.yaml.
        image: "{{ .Values.image.frontend.repository }}:{{ .Values.image.frontend.tag }}"
        imagePullPolicy: {{ .Values.image.frontend.pullPolicy }}
        ports:
          - containerPort: {{ .Values.service.frontend.port }}
        # The frontend volume mount connects the container's Nginx content directory
        # to the ConfigMap.
        volumeMounts:
          - name: frontend-volume
            mountPath: /usr/share/nginx/html
      volumes:
        # The frontend-volume gets its data from the ConfigMap defined below.
        - name: frontend-volume
          configMap:
            # The name of the ConfigMap must match the one defined below.
            name: {{ .Release.Name }}-config-frontend
---
# A ConfigMap to hold the index.html content for the frontend.
# This makes it easy to update the website without changing the container image.
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ .Release.Name }}-config-frontend
  labels:
    app: {{ .Release.Name }}-frontend
data:
  # The index.html content is pulled directly from the values.yaml file.
  index.html: |
{{ .Values.frontend.indexHtml | nindent 4 }}
